(function(t){function e(e){for(var a,i,c=e[0],l=e[1],n=e[2],h=0,u=[];h<c.length;h++)i=c[h],Object.prototype.hasOwnProperty.call(o,i)&&o[i]&&u.push(o[i][0]),o[i]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(t[a]=l[a]);d&&d(e);while(u.length)u.shift()();return r.push.apply(r,n||[]),s()}function s(){for(var t,e=0;e<r.length;e++){for(var s=r[e],a=!0,c=1;c<s.length;c++){var l=s[c];0!==o[l]&&(a=!1)}a&&(r.splice(e--,1),t=i(i.s=s[0]))}return t}var a={},o={app:0},r=[];function i(e){if(a[e])return a[e].exports;var s=a[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=a,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(s,a,function(e){return t[e]}.bind(null,a));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="/";var c=window["webpackJsonp"]=window["webpackJsonp"]||[],l=c.push.bind(c);c.push=e,c=c.slice();for(var n=0;n<c.length;n++)e(c[n]);var d=l;r.push([0,"chunk-vendors"]),s()})({0:function(t,e,s){t.exports=s("cd49")},"21bb":function(t,e,s){"use strict";var a=s("2dad"),o=s.n(a);o.a},"2dad":function(t,e,s){},"558c":function(t,e,s){},"5c0b":function(t,e,s){"use strict";var a=s("9c0c"),o=s.n(a);o.a},9499:function(t,e,s){"use strict";var a=s("558c"),o=s.n(a);o.a},"9c0c":function(t,e,s){},cd49:function(t,e,s){"use strict";s.r(e);var a=s("2b0e"),o=s("bc3a"),r=s.n(o);let i={};const c=r.a.create(i);c.interceptors.request.use((function(t){return t}),(function(t){return Promise.reject(t)})),c.interceptors.response.use((function(t){return t}),(function(t){return Promise.reject(t)})),Plugin.install=function(t,e){t.axios=c,window.axios=c,Object.defineProperties(t.prototype,{axios:{get(){return c}},$axios:{get(){return c}}})},a["default"].use(Plugin);Plugin;var l=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("v-app",{attrs:{dark:""}},[s("v-card",{attrs:{color:"grey lighten-4",flat:"",tile:""}},[s("v-toolbar",{attrs:{dense:""}},[s("v-toolbar-title",[t._v("nn-lib visualizer")]),s("v-spacer")],1)],1),s("router-view")],1)},n=[],d=s("9ab4"),h=s("60a3"),u=s("9530"),p=s.n(u);let m=class extends h["c"]{created(){this.$store.dispatch("fetchData")}mounted(){this.$apollo.addSmartSubscription("tagAdded",{query:p.a`subscription epochs {
                update {
                    id
                    epoch {
                        id, accuracy, loss, batches {
                            id, accuracy, loss, global_id, time
                        }, eval_loss, eval_accuracy
                    },
                    info {
                        duration
                    }
                }
              }`,result(t){this.$store.commit("updateModel",t.data.update),this.$store.dispatch("updateModelInfo",t.data.update.id)}})}};m=Object(d["__decorate"])([h["a"]],m);var _=m,f=_,g=(s("5c0b"),s("2877")),b=Object(g["a"])(f,l,n,!1,null,null,null),v=b.exports,y=s("9483");Object(y["a"])("/service-worker.js",{ready(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered(){console.log("Service worker has been registered.")},cached(){console.log("Content has been cached for offline use.")},updatefound(){console.log("New content is downloading.")},updated(){console.log("New content is available; please refresh.")},offline(){console.log("No internet connection found. App is running in offline mode.")},error(t){console.error("Error during service worker registration:",t)}});var w=s("8c4f"),O=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"center",staticStyle:{"margin-top":"30px"}},[s("div",{staticClass:"row"},[s("v-card",{staticStyle:{margin:"16px"},attrs:{width:"100%"}},[s("v-card-title",[s("span",[t._v("Model")]),s("v-spacer"),s("v-dialog",{attrs:{width:"300"},scopedSlots:t._u([{key:"activator",fn:function(e){var a=e.on;return[s("v-btn",t._g({staticStyle:{"margin-left":"8px"},attrs:{icon:""}},a),[s("v-icon",[t._v("mdi-dots-vertical")])],1)]}}]),model:{value:t.settingsDialog,callback:function(e){t.settingsDialog=e},expression:"settingsDialog"}},[s("v-card",[s("v-card-title",{staticClass:"headline grey lighten-2",attrs:{"primary-title":""}},[t._v("Settings")]),s("v-card-text",[s("v-card-subtitle",[t._v("Chart size:")]),s("v-btn-toggle",{model:{value:t.toggle_size,callback:function(e){t.toggle_size=e},expression:"toggle_size"}},[s("v-btn",{attrs:{small:""}},[t._v("S")]),s("v-btn",{attrs:{small:""}},[t._v("M")]),s("v-btn",{attrs:{small:""}},[t._v("L")])],1),s("v-switch",{attrs:{label:"Show estimate graphs:"},model:{value:t.showEstimate,callback:function(e){t.showEstimate=e},expression:"showEstimate"}})],1),s("v-divider"),s("v-card-actions",[s("v-spacer"),s("v-btn",{attrs:{color:"primary",text:""},on:{click:function(e){t.settingsDialog=!1}}},[t._v("Close")])],1)],1)],1)],1),t.hasData?s("v-card-text",[s("v-tabs",{attrs:{centered:""},model:{value:t.tab,callback:function(e){t.tab=e},expression:"tab"}},[s("v-tab",[t._v("Info")]),s("v-tab",[t._v("Structure")])],1),s("v-tabs-items",{model:{value:t.tab,callback:function(e){t.tab=e},expression:"tab"}},[s("v-tab-item",[s("v-data-table",{attrs:{headers:t.headers,items:t.table_data,"hide-default-footer":"","item-key":"name","show-expand":""},scopedSlots:t._u([{key:"expanded-item",fn:function(e){var a=e.headers,o=e.item;return[s("td",{attrs:{colspan:a.length}},[s("div",{staticStyle:{margin:"16px 0"}},[s("v-progress-linear",{staticStyle:{"margin-bottom":"16px"},attrs:{value:t.$store.state.models[o.name].info.current_batch_for_epoch/t.$store.state.models[o.name].info.batches_per_epoch*100,height:"25",rounded:""},scopedSlots:t._u([{key:"default",fn:function(e){e.value;return[s("span",{staticStyle:{color:"white"}},[t._v("Batch: "+t._s(t.$store.state.models[o.name].info.current_batch_for_epoch)+" / "+t._s(t.$store.state.models[o.name].info.batches_per_epoch))])]}}],null,!0)}),s("v-progress-linear",{attrs:{value:Object.keys(t.$store.state.models[o.name].epochs).length/t.$store.state.models[o.name].info.total_epochs*100,height:"25",rounded:""},scopedSlots:t._u([{key:"default",fn:function(e){e.value;return[s("span",{staticStyle:{color:"white"}},[t._v("Epoch: "+t._s(Object.keys(t.$store.state.models[o.name].epochs).length)+" / "+t._s(t.$store.state.models[o.name].info.total_epochs)+" ("+t._s(t.$store.state.models[o.name].info.progress.toPrecision(4))+" %)")])]}}],null,!0)})],1)])]}}],null,!1,1855446053)})],1),s("v-tab-item",[s("v-card",{attrs:{flat:""}},[s("v-card-title",[t._v("Structure")]),s("v-card-text")],1)],1)],1)],1):t._e()],1)],1),s("div",{staticClass:"row"},[s("new-line-graph",{attrs:{g_title:"Epoch Avg - Accuracy",size:this.toggle_size,"chart-data":t.epoch_acc_data,"show-estimate":t.showEstimate}}),s("new-line-graph",{attrs:{g_title:"Epoch Avg - Loss",size:this.toggle_size,"chart-data":t.epoch_loss_data,"show-estimate":t.showEstimate,estimate:t.loss_estimate}})],1),t.hasEvalData?s("div",{staticClass:"row"},[s("new-line-graph",{attrs:{g_title:"Eval - Accuracy",size:this.toggle_size,"chart-data":t.eval_acc_data,"show-estimate":t.showEstimate}}),s("new-line-graph",{attrs:{g_title:"Eval - Loss",size:this.toggle_size,"chart-data":t.eval_loss_data,"show-estimate":t.showEstimate}})],1):t._e(),s("div",{staticClass:"row"},[s("new-line-graph",{attrs:{g_title:"Batch - Accuracy",size:this.toggle_size,"chart-data":t.batch_acc_data,"show-estimate":t.showEstimate}}),s("new-line-graph",{attrs:{g_title:"Batch - Loss",size:this.toggle_size,"chart-data":t.batch_loss_data,"show-estimate":t.showEstimate,estimate:t.loss_estimate}})],1)])},x=[],j=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("v-card",{staticStyle:{margin:"16px"}},[s("div",{staticClass:"center",staticStyle:{margin:"8px"}},[s("Plotly",{attrs:{data:t.plot_data,layout:t.layout,"display-mode-bar":2===t.size}})],1)])},k=[],$=s("04d1"),E=s("e461"),S=s.n(E),D=s("8a77"),P=s.n(D);let z=class extends h["c"]{constructor(){super(...arguments),this.estimateData={x:[],y:[],type:"scatter"}}get plot_data(){return this.showEstimate?this.chartData.push(this.estimateData):this.chartData}chartDataUpdate(t,e){if(this.estimate&&this.showEstimate){const e=new S.a(t.x),s=new S.a(t.y);let a=new P.a;a.createEmptyArray(e.size(),2),a.matrix.forEach((t,s)=>{a.set(s,0,this.estimate.aFunc(e.get(s))),a.set(s,1,this.estimate.bFunc(e.get(s)))});let o=new S.a(s.size());o.iterate((t,e)=>{o.set(e,this.estimate.yFunc(s.get(e)))});const r=a.transpose().mm(a),i=a.transpose().mm(o);let c=r.inv().mm(i);this.estimateData.x=t.x,this.estimateData.y=t.x.map(t=>this.estimate.calcFunc(t,c.get(0),c.get(1)))}}get_size(t){switch(t){case 0:return 300;case 1:return 500;case 2:return 1048;default:return 500}}get layout(){return{title:{text:this.g_title,x:0},autosize:!0,margin:{l:30,r:20,t:30,b:30},width:this.get_size(this.size),height:300}}};Object(d["__decorate"])([Object(h["b"])()],z.prototype,"g_title",void 0),Object(d["__decorate"])([Object(h["b"])({default:1})],z.prototype,"size",void 0),Object(d["__decorate"])([Object(h["b"])({default:[]})],z.prototype,"chartData",void 0),Object(d["__decorate"])([Object(h["b"])()],z.prototype,"estimate",void 0),Object(d["__decorate"])([Object(h["b"])({default:!1})],z.prototype,"showEstimate",void 0),Object(d["__decorate"])([Object(h["d"])("chartData")],z.prototype,"chartDataUpdate",null),z=Object(d["__decorate"])([Object(h["a"])({components:{Plotly:$["Plotly"]}})],z);var A=z,M=A,C=(s("9499"),Object(g["a"])(M,j,k,!1,null,null,null)),F=C.exports;let T=class extends h["c"]{constructor(){super(...arguments),this.toggle_size=1,this.tab=0,this.settingsDialog=!1,this.showEstimate=!1,this.headers=[{text:"Model",value:"name"},{text:"AVG Time (Batch)",value:"batch_avg_time"},{text:"AVG Time (Epoch)",value:"epoch_avg_time"},{text:"Start Time",value:"start_time"},{text:"Duration",value:"duration"},{text:"Time Left",value:"time_left"},{text:"Total Time",value:"total_time"}],this.loss_estimate={calcFunc:(t,e,s)=>Math.exp(s*t+e),aFunc:t=>1,bFunc:t=>t,yFunc:t=>Math.log(t)},this.acc_estimate={calcFunc:(t,e,s)=>e*t+s,aFunc:t=>1,bFunc:t=>t,yFunc:t=>Math.log(t+10**10)}}get table_data(){return Object.keys(this.$store.state.models).map(t=>({name:t,batch_avg_time:this.$store.state.models[t].info.avg_time.toPrecision(4),epoch_avg_time:(this.$store.state.models[t].info.avg_time*this.$store.state.models[t].info.batches_per_epoch).toPrecision(4),start_time:`${new Date(this.$store.state.models[t].info.start_time).toDateString()} ${this.formatTime(new Date(this.$store.state.models[t].info.start_time))}`,duration:""+this.formatDuration(this.$store.state.models[t].info.duration),time_left:""+this.formatDuration(this.$store.state.models[t].info.time_left),total_time:""+this.formatDuration(this.$store.state.models[t].info.avg_time*this.$store.state.models[t].info.batches_per_epoch*this.$store.state.models[t].info.total_epochs)}))}formatTime(t){return(t.getHours()<10?"0"+t.getHours():t.getHours())+":"+(t.getMinutes()<10?"0"+t.getMinutes():t.getMinutes())+":"+(t.getSeconds()<10?"0"+t.getSeconds():t.getSeconds())}formatDuration(t){const e=Math.floor(t/86400),s=Math.floor((t-3600*e*24)/3600),a=Math.floor((t-3600*e*24-3600*s)/60),o=t-3600*e*24-3600*s-60*a;return e+"d "+(s<10?"0"+s:s)+"h "+(a<10?"0"+a:a)+"m "+(o<10?"0"+o.toPrecision(5):o.toPrecision(5))+"s"}get hasEvalData(){for(let t of Object.keys(this.$store.state.models))if(this.$store.state.models[t].info.eval_model)return!0;return!1}get hasData(){return Object.keys(this.$store.state.models).length>0}get epoch_acc_data(){return Object.keys(this.$store.state.models).map(t=>this.$store.state.models[t].graphs.epoch_acc)}get epoch_loss_data(){return Object.keys(this.$store.state.models).map(t=>this.$store.state.models[t].graphs.epoch_loss)}get eval_acc_data(){return Object.keys(this.$store.state.models).map(t=>this.$store.state.models[t].graphs.eval_acc)}get eval_loss_data(){return Object.keys(this.$store.state.models).map(t=>this.$store.state.models[t].graphs.eval_loss)}get batch_acc_data(){return Object.keys(this.$store.state.models).map(t=>this.$store.state.models[t].graphs.batch_acc)}get batch_loss_data(){return Object.keys(this.$store.state.models).map(t=>this.$store.state.models[t].graphs.batch_loss)}};T=Object(d["__decorate"])([Object(h["a"])({components:{NewLineGraph:F}})],T);var L=T,N=L,q=(s("21bb"),Object(g["a"])(N,O,x,!1,null,null,null)),B=q.exports;a["default"].use(w["a"]);const H=[{path:"/",name:"Home",component:B}],U=new w["a"]({mode:"history",base:"/",routes:H});var V=U,I=s("2f62");let R;async function G(t,e={}){let s="http://"+R+"/graphql";return r.a.post(s,{query:t,variables:e})}R=window.location.host,a["default"].use(I["a"]);var J=new I["a"].Store({state:{models:{}},mutations:{updateModel(t,e){if(a["default"].set(t.models[e.id],"info",Object.assign(t.models[e.id].info,e.info)),t.models[e.id].epochs[e.epoch.id]){const s=Object.assign(t.models[e.id].epochs[e.epoch.id],e.epoch);a["default"].set(t.models[e.id].epochs,e.epoch.id,s)}else a["default"].set(t.models[e.id].epochs,e.epoch.id,e.epoch)},updateGraph(t,e){a["default"].set(t.models[e.modelId].graphs,e.item,e.data)}},actions:{async fetchData(t){let e=await G("query {\n                    models {\n                        id\n                        epochs {\n                            id, accuracy, loss, batches {id, accuracy, loss, global_id, time}, eval_loss, eval_accuracy\n                        }\n                        \n                        info {\n                            duration, start_time, total_neurons, batches_per_epoch, total_epochs, eval_model\n                        }\n                    }\n                }");t.state.models=e.data.data.models.reduce((t,e)=>{const s=e;return s.epochs=s.epochs.reduce((t,e)=>(t[e["id"]]=e,t),{}),s["graphs"]={},t[e["id"]]=s,t},{}),Object.keys(t.state.models).forEach(e=>{t.dispatch("updateModelInfo",e)})},updateModelInfo(t,e){const s=Object.keys(t.state.models[e].epochs)[Object.keys(t.state.models[e].epochs).length-1];a["default"].set(t.state.models[e].info,"current_batch_for_epoch",t.state.models[e].epochs[s].batches.length);const o=(Object.keys(t.state.models[e].epochs).length-1)*t.state.models[e].info.batches_per_epoch+t.state.models[e].info.current_batch_for_epoch;a["default"].set(t.state.models[e].info,"avg_time",Object.keys(t.state.models[e].epochs).reduce((s,a)=>(t.state.models[e].epochs[a].batches.forEach(t=>{s+=t.time}),s),0)/o),a["default"].set(t.state.models[e].info,"progress",o/(t.state.models[e].info.batches_per_epoch*t.state.models[e].info.total_epochs)*100);const r=t.state.models[e].info.batches_per_epoch*t.state.models[e].info.total_epochs-o;a["default"].set(t.state.models[e].info,"time_left",r*t.state.models[e].info.avg_time),a["default"].set(t.state.models[e].graphs,"epoch_acc",Object.keys(t.state.models[e].epochs).reduce((s,a)=>(s.y.push(t.state.models[e].epochs[a].accuracy),s.x.push(t.state.models[e].epochs[a].id),s),{x:[0],y:[0],name:"model_"+e})),a["default"].set(t.state.models[e].graphs,"epoch_loss",Object.keys(t.state.models[e].epochs).reduce((s,a)=>(s.y.push(t.state.models[e].epochs[a].loss),s.x.push(t.state.models[e].epochs[a].id),s),{x:[],y:[],name:"model_"+e})),a["default"].set(t.state.models[e].graphs,"eval_acc",Object.keys(t.state.models[e].epochs).slice(0,Object.keys(t.state.models[e].epochs).length-1).reduce((s,a)=>(s.y.push(t.state.models[e].epochs[a].eval_accuracy),s.x.push(t.state.models[e].epochs[a].id),s),{x:[0],y:[0],name:"model_"+e})),a["default"].set(t.state.models[e].graphs,"eval_loss",Object.keys(t.state.models[e].epochs).slice(0,Object.keys(t.state.models[e].epochs).length-1).reduce((s,a)=>(s.y.push(t.state.models[e].epochs[a].eval_loss),s.x.push(t.state.models[e].epochs[a].id),s),{x:[],y:[],name:"model_"+e})),a["default"].set(t.state.models[e].graphs,"batch_acc",Object.keys(t.state.models[e].epochs).reduce((s,a)=>(t.state.models[e].epochs[a].batches.forEach(t=>{s.y.push(t.accuracy),s.x.push(t.global_id)}),s),{x:[0],y:[0],name:"model_"+e})),a["default"].set(t.state.models[e].graphs,"batch_loss",Object.keys(t.state.models[e].epochs).reduce((s,a)=>(t.state.models[e].epochs[a].batches.forEach(t=>{s.y.push(t.loss),s.x.push(t.global_id)}),s),{x:[],y:[],name:"model_"+e}))}},modules:{}}),Q=s("522d"),W=s("efe7");a["default"].use(Q["a"]);const K="apollo-token";let X,Y;X=window.location.host,Y=window.location.host.substr(0,window.location.host.indexOf(":"))+":"+(parseInt(window.location.host.substr(window.location.host.indexOf(":")+1))+1);const Z=Object({NODE_ENV:"production",BASE_URL:"/"}).VUE_APP_GRAPHQL_HTTP||"http://"+X+"/graphql",tt=Object({NODE_ENV:"production",BASE_URL:"/"}).VUE_APP_FILES_ROOT||Z.substr(0,Z.indexOf("/graphql"));a["default"].prototype.$filesRoot=tt;const et={httpEndpoint:Z,wsEndpoint:Object({NODE_ENV:"production",BASE_URL:"/"}).VUE_APP_GRAPHQL_WS||"ws://"+Y+"/graphql",tokenName:K,persisting:!1,websocketsOnly:!1,ssr:!1};function st(t={}){const{apolloClient:e,wsClient:s}=Object(W["createApolloClient"])({...et,...t});e.wsClient=s;const a=new Q["a"]({defaultClient:e,defaultOptions:{$query:{}},errorHandler(t){console.log("%cError","background: red; color: white; padding: 2px 4px; border-radius: 3px; font-weight: bold;",t.message)}});return a}s("5363");var at=s("ce5b"),ot=s.n(at);s("bf40");a["default"].use(ot.a);var rt=new ot.a({theme:{dark:!1}}),it=s("cb43");a["default"].use(it["default"]),a["default"].config.productionTip=!1,new a["default"]({router:V,store:J,apolloProvider:st(),vuetify:rt,render:t=>t(v)}).$mount("#app")}});
//# sourceMappingURL=app.fb31e71c.js.map